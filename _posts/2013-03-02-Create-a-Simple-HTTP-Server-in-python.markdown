---
layout: post
title: Create a Simple HTTP Server in python
date: 2013-03-02
---

<b>Short version:</b><br /><br />python -m SimpleHTTPServer<br /><b><br /></b><b>Long version:</b><br /><br />My background is ASP.NET web development. &nbsp;When I think web server, I think of big heavy programs like IIS. &nbsp;I knew that there were other webservers, but I never really considered using them for development. <br /><br />At my new job, I've been doing Python&nbsp;+ Google App Engine development (not asp.net). &nbsp;This change in my career has led to a change in focus of what I read about. &nbsp;I'm no longer hitting up the Microsoft C# sites anymore - not because they are bad -- just not relavent to my career.<br /><br />About a week ago I came across an article from codeschool.com that talked about using node.js for a simple webserver. &nbsp;This wasn't a big surprise to me -- I knew things besides IIS existed -- I had just never looked into it -- Up to this point I've just been using GAE as my webserver.<br /><br />I fell into a rat hole of various ways to have mini-webservers. &nbsp;Node.js had several options. &nbsp;I pulled a few from <a href="https://coderwall.com/p/rbghmg">Eric Allam's blog post</a> (I found it via codeschool). &nbsp;If you look down in the comments you'll find other&nbsp;simpler&nbsp;options to Eric's suggestion. &nbsp;It went like this:<br /><br />"You can using the filed module, but really Express is a better way to go, then again the connect module is the module <b>actually</b> serving the content in Express. &nbsp;Looks like I've got options. &nbsp;Then again, I'm really just interested in learning Python at the moment, I wonder if they have something? Sure enough - SimpleHTTPServer is the answer."<br /><br />Nothing to do with Node.js, but that's how brainstorming and research goes.<br /><br />
